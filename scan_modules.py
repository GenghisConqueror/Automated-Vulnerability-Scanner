import nmap
import requests
from urllib.parse import urljoin

def scan_network(network):
    nm = nmap.PortScanner()
    nm.scan(hosts=network, arguments='-p 1-1024')
    hosts = [(host, nm[host]['status']['state']) for host in nm.all_hosts()]
    return hosts


# def check_sql_injection(url):
#     payloads = ["'", "' OR '1'='1", '"', '" OR "1"="1']
#     for payload in payloads:
#         r = requests.get(url, params={"id": payload})
#         if "syntax error" in r.text or "mysql" in r.text or "sql" in r.text:
#             return True
#     return False


def check_xss(url):
    payload = "<script>alert('XSS')</script>"
    try:
        response = requests.get(url, params={"q": payload})
        if payload in response.text:
            return True
    except requests.RequestException:
        return False
    return False


# def check_directory_traversal(url):
#     payloads = ["../", "..\\", "../../", "..\\..\\", "/etc/passwd", "C:\\Windows\\System32\\drivers\\etc\\hosts"]
#     for payload in payloads:
#         r = requests.get(urljoin(url, payload))
#         if "root:x:" in r.text or "localhost" in r.text:
#             return True
#     return False
#
# def check_all_vulnerabilities(base_url):
#     vulnerabilities = {
#         "SQL Injection": check_sql_injection(base_url),
#         "XSS": check_xss(base_url),
#         "Directory Traversal": check_directory_traversal(base_url)
#     }
#     return vulnerabilities
#
# if __name__ == "__main__":
#     target_url = input("Enter the target URL: ")
#     results = check_all_vulnerabilities(target_url)
#     for vuln, result in results.items():
#         print(f"{vuln}: {'Vulnerable' if result else 'Not Vulnerable'}")


def get_cve_details(cve_id):
    url = f'https://services.nvd.nist.gov/rest/json/cve/1.0/{cve_id}'
    try:
        response = requests.get(url)
        if response.status_code == 200:
            return response.json()
    except requests.RequestException:
        return None
    return None
